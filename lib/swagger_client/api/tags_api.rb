=begin
#TeePublic V3 search Api Documentation

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.15

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'uri'

module SwaggerClient
  class TagsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Gets tags data based on name(s)
    # Gets tags data based on name(s)
    # @param tag_names_list comma separated list of tag names
    # @param [Hash] opts the optional parameters
    # @return [TagsResponse]
    def get_v1_tags(tag_names_list, opts = {})
      data, _status_code, _headers = get_v1_tags_with_http_info(tag_names_list, opts)
      data
    end

    # Gets tags data based on name(s)
    # Gets tags data based on name(s)
    # @param tag_names_list comma separated list of tag names
    # @param [Hash] opts the optional parameters
    # @return [Array<(TagsResponse, Fixnum, Hash)>] TagsResponse data, response status code and response headers
    def get_v1_tags_with_http_info(tag_names_list, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TagsApi.get_v1_tags ...'
      end
      # verify the required parameter 'tag_names_list' is set
      if @api_client.config.client_side_validation && tag_names_list.nil?
        fail ArgumentError, "Missing the required parameter 'tag_names_list' when calling TagsApi.get_v1_tags"
      end
      # resource path
      local_var_path = '/v1/tags'

      # query parameters
      query_params = {}
      query_params[:'tag_names_list'] = tag_names_list

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TagsResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TagsApi#get_v1_tags\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
